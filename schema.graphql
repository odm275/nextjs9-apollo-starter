enum Gender {
  Male
  Female
}
enum UserRole {
  ADMIN
  MODERATOR
  AUTH_USER
  ANON
}

type User {
  username: String! @unique
  email: String @unique
  role: UserRole!
  nnid: String
  gender: Gender
  birthday: Date
  aboutMe: String
}

input CreateUserInput {
  username: String!
  password: String!
  email: String!
  role: UserRole!
}

input LoginUserInput {
  username: String!
  password: String!
}


type Query {
  findUsersByEmail(email: String): User @index(name: "users_by_email")
  findUsersByUsername(username: String): User @index(name: "users_by_username")
  allUsers: [User!]
}

type Mutation {
  createUser(input: CreateUserInput): User! @resolver(name: "create_user")
  loginUser(input: LoginUserInput): String! @resolver(name: "login_user")
}